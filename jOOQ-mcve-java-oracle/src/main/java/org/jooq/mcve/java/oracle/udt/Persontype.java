/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.oracle.udt;


import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;
import org.jooq.mcve.java.oracle.Mcve;
import org.jooq.mcve.java.oracle.udt.records.PersontypeRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Persontype extends UDTImpl<PersontypeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>MCVE.PERSONTYPE</code>
     */
    public static final Persontype PERSONTYPE = new Persontype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersontypeRecord> getRecordType() {
        return PersontypeRecord.class;
    }

    /**
     * The attribute <code>MCVE.PERSONTYPE.FIRST_NAME</code>.
     */
    public static final UDTField<PersontypeRecord, String> FIRST_NAME = createField(DSL.name("FIRST_NAME"), SQLDataType.VARCHAR(50), PERSONTYPE, "");

    /**
     * The attribute <code>MCVE.PERSONTYPE.LAST_NAME</code>.
     */
    public static final UDTField<PersontypeRecord, String> LAST_NAME = createField(DSL.name("LAST_NAME"), SQLDataType.VARCHAR(50), PERSONTYPE, "");

    /**
     * No further instances allowed
     */
    private Persontype() {
        super(DSL.name("PERSONTYPE"), null, null, false);
    }

    @Override
    public Schema getSchema() {
        return Mcve.MCVE != null ? Mcve.MCVE : new SchemaImpl(DSL.name("MCVE"));
    }
}
